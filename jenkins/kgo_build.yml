---
- job:
    name: kgo_docker_build
    project-type: pipeline
    description: 'KGO: BUILD JOB"
    disabled: false
    display-name: 'Deployment: KGO BUILD Job'
    parameters:
      - string:
          name: TAG
          default: '0.1'
          description: 'Tag to deploy to registry'
      - string:
          name: REGISTRY
          default: 'registry.torpedo.red:5000'
          description: 'Docker Registry (REQUIRED).'
    logrotate:
      daysToKeep: 10
      numToKeep: 50
    dsl: |
          import hudson.EnvVars
          try {
          node {
            stage 'checkout code'
              println "\u2600 checking out code"
              git branch: 'master', url: 'https://github.com/kvelarde/kgo-example-web.git'
            stage 'Unit Test Code'
              println 'Unit testing'
            stage 'build Temp Docker Image'
              sh 'docker build -t kgo-example-web:build . -f Dockerfile.build'
            stage 'Create and extract go source file'
              println 'Building and extracting application file'
              sh 'docker create --name kgo-exampe-web_extract kgo-example-web:build'
              sh 'docker cp kgo-exampe-web_extract:/go/src/user/app/app kgo-example-web'
              sh 'docker rm kgo-exampe-web_extract'
            stage 'Create kgo-example-web:latest'
              println 'Creating kgo-example-web:latest'
              sh 'docker build --no-cache -t kgo-example-web:latest .'
            stage 'Tag Image'
              println "\u2600 Tag Image"
              sh "docker tag kgo-example-web:latest ${REGISTRY}/kgo-example-web:${TAG}"
            stage 'Push Image'
              println "Pushing docker image to ${REGISTRY}"
              sh "docker push ${REGISTRY}/kgo-example-web:${TAG}"
              sh 'sleep 10'
            stage "Functional Test"
              println 'functional Test'
          } // end node
          } // end try
          catch (exc) {
            String recipient = 'infra@lists.kurtisvelarde.com'
            mail subject: "${env.JOB_NAME} (${env.BUILD_NUMBER}) failed",
              body: "It appears that ${env.BUILD_URL} is failing",
              to: recipient,
              from: 'build@kurtisvelarde.com'
          }
